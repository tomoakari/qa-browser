name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: qabrowser
  REGION: asia-northeast1

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: SvelteKit sync
        run: npx svelte-kit sync

      - name: Build application
        run: npm run build
        env:
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
          VITE_GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
          VITE_GITHUB_REPO_OWNER: ${{ secrets.GH_REPO_OWNER }}
          VITE_GITHUB_REPO_NAME: ${{ secrets.GH_REPO_NAME }}
          VITE_GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Create cloudbuild.yaml
        run: |
          cat > cloudbuild.yaml << EOF
          steps:
          - name: 'gcr.io/cloud-builders/docker'
            args: [
              'build',
              '--build-arg', 'PUBLIC_SUPABASE_URL=${{ secrets.PUBLIC_SUPABASE_URL }}',
              '--build-arg', 'PUBLIC_SUPABASE_ANON_KEY=${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}',
              '--build-arg', 'VITE_GITHUB_TOKEN=${{ secrets.GH_API_TOKEN }}',
              '--build-arg', 'VITE_GITHUB_REPO_OWNER=${{ secrets.GH_REPO_OWNER }}',
              '--build-arg', 'VITE_GITHUB_REPO_NAME=${{ secrets.GH_REPO_NAME }}',
              '--build-arg', 'VITE_GOOGLE_AI_API_KEY=${{ secrets.GOOGLE_AI_API_KEY }}',
              '-t', 'gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA',
              '.'
            ]
          images:
          - 'gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA'
          EOF

      - name: Build and push Docker image
        run: |
          gcloud builds submit --config=cloudbuild.yaml --verbosity=debug

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --set-env-vars="PUBLIC_SUPABASE_URL=${{ secrets.PUBLIC_SUPABASE_URL }}" \
            --set-env-vars="PUBLIC_SUPABASE_ANON_KEY=${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}" \
            --set-env-vars="VITE_GITHUB_TOKEN=${{ secrets.GH_API_TOKEN }}" \
            --set-env-vars="VITE_GITHUB_REPO_OWNER=${{ secrets.GH_REPO_OWNER }}" \
            --set-env-vars="VITE_GITHUB_REPO_NAME=${{ secrets.GH_REPO_NAME }}" \
            --set-env-vars="VITE_GOOGLE_AI_API_KEY=${{ secrets.GOOGLE_AI_API_KEY }}"
